1. 플로이드-워셜 알고리즘(Floyd-Warshall Algorithm)

- 그래프에서 모든 꼭짓점 사이의 최단경로의 거리를 구하는 알고리즘
- 순환을 제외하면, 음수 가중치를 가져도 사용가능하다.
- 시간복잡도 : O(n^3)
- 최대활용 : 최단경로를 찾기에 좋은 알고리즘이다. 

<알고리즘 예시코드>

for(int k=0; k<N; k++){
	for(int i=0; i<N; i++){
		for(int j=0; j<N; j++){
			if(d[i][j]>d[i][k]+d[k][j]){
				d[i][j] = d[i][k] + d[k][j];
			}
		}
	}
}

- 첫번 째 반복문 : 거쳐가는 정점
- 두번 째 반복문 : 출발하는 정점
- 세번 째 반복문 : 도착하는 정점


※ 선행 조건 : 2차원 배열d에는 두 정점간의 비용이 초기화 되어있어야 한다. -> 연결여부파악위해

<맵의 초기화 조건>
for(int i=0; i<N; i++){
	for(int j=0; j<N; j++){
		d[i][j] = (i == j) ? 0 : MAX(문제에서의최대값);
	}
}

- 맵을 초기화시 최대값으로 초기화 시켜야 한다. -> 플로이드 워셜 알고리즘을 사용하기위해


